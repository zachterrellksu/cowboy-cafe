@* 
    Author: Zachary Terrell

    Class Name: index.cshtml

    Purpose: Landing page of website
*@

@page
@using CowboyCafe.Data;
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
    
    <main class="main-grid-container">
        <header class="main-head">
            <h1>Cowboy Cafe</h1>
            <p>
                We at Cowboy Cafe are proud to bring you authentic trail meals from the American West.
                off the dust on your boots and sake your thirst with one of our old-fashioned hand-jerked sodas.
                Dip your Pan de Campo into a bowl of beans. Or conquer the the mighty Texas Triple Burger!
                You’ve had a hard ride - so take it easy with us.
            </p>
        </header>
        <form>
            <div class="body-grid-container">

                <section class="S-F">
                    <div id="search">
                        <input type="text" name="SearchTerms" value="@Model.SearchTerms" />
                        <input type="submit" value="Search" />
                    </div>

                    <div id="filters">
                        <h4>Category</h4>
                        <label>
                            <input type="checkbox" name="Categories" value="Entree" checked="@Model.Categories?.Contains("Entree")" />
                            Entree
                        </label>
                        <label>
                            <input type="checkbox" name="Categories" value="Side" checked="@Model.Categories?.Contains("Side")" />
                            Side
                        </label>
                        <label>
                            <input type="checkbox" name="Categories" value="Drink" checked="@Model.Categories?.Contains("Drink")" />
                            Drink
                        </label>

                        <h4>Calories</h4>
                        <div>
                            Between
                            <input name="cmin" type="number" min="0" max="1000" step="1" placeholder="min" value="@Model.CaloriesMin" />
                            and
                            <input name="cmax" type="number" min="0" max="1000" step="1" placeholder="max" value="@Model.CaloriesMax" />
                        </div>

                        <h4>Price</h4>
                        <div>
                            Between
                            <input name="pmin" type="number" min="0" max="50" step=".1" placeholder="min" value="@Model.PriceMin" />
                            and
                            <input name="pmax" type="number" min="0" max="50" step=".1" placeholder="max" value="@Model.PriceMax" />
                        </div>
                    </div>
                </section>



                <section class="items">
                    <div class="entrees">
                        <h2 id="entreecat">Entrees</h2>
                        @foreach (IOrderItem entree in @Model.Items)
                        {
                            if (entree is Entree)
                            {
                                <div class="menu-item">
                                    <h2 class="item-name">@entree.ToString()</h2>
                                    <h3 class="item-price">$@entree.Price</h3>
                                    <h3 class="item-calories">@entree.Calories cal.</h3>
                                </div>
                            }
                        }
                    </div>
                    <div class="sides">
                        <h2 id="sidescat">Sides</h2>
                        @foreach (IOrderItem item in @Model.Items)
                        {
                            if (item is Side side)
                            {
                                <div class="menu-item">
                                    <h2 class="item-name">@side.ToString().Substring(6)</h2>
                                    @{
                                        side.Size = Size.Small;
                                    }
                                    <div class="small-size">
                                        <h3 class="size-descriptor">Small</h3>
                                        <h3 class="item-price">$@side.Price</h3>
                                        <h3 class="item-calories">@side.Calories cal.</h3>
                                    </div>
                                    @{
                                        side.Size = Size.Medium;
                                        if ((side.Price <= Model.PriceMax || Model.PriceMax == null) && (side.Price >= Model.PriceMin || Model.PriceMin == null)
                                                    && (side.Calories >= Model.CaloriesMin || Model.CaloriesMin == null) && (side.Calories <= Model.CaloriesMax || Model.CaloriesMax == null))
                                        {

                                            <div class="medium-size">
                                                <h3 class="size-descriptor">Medium</h3>
                                                <h3 class="item-price">$@side.Price</h3>
                                                <h3 class="item-calories">@side.Calories cal.</h3>
                                            </div>
                                        }
                                    }
                                    @{
                                        side.Size = Size.Large;
                                        if ((side.Price <= Model.PriceMax || Model.PriceMax == null) && (side.Price >= Model.PriceMin || Model.PriceMin == null)
                                                   && (side.Calories >= Model.CaloriesMin || Model.CaloriesMin == null) && (side.Calories <= Model.CaloriesMax || Model.CaloriesMax == null))
                                        {

                                            <div class="large-size">
                                                <h3 class="size-descriptor">Large</h3>
                                                <h3 class="item-price">$@side.Price</h3>
                                                <h3 class="item-calories">@side.Calories cal.</h3>
                                            </div>
                                        }
                                    }
                                </div>
                            }
                        }
                    </div>
                    <div class="drinks">
                        <h2 id="drinkscat">Drinks</h2>
                        @foreach (IOrderItem item in @Model.Items)
                        {
                            if (item is Drink drink)
                            {
                                <div class="menu-item">
                                    @{
                                        if (drink is TexasTea)
                                        {
                                            <h2 class="item-name">Texas Tea</h2>
                                        }
                                        else if (drink is JerkedSoda)
                                        {
                                            <h2 class="item-name">Jerked Soda</h2>
                                        }
                                        else
                                        {
                                            <h2 class="item-name">@drink.ToString().Substring(6)</h2>
                                        }
                                    }
                                    @{
                                        drink.Size = Size.Small;
                                    }
                                    <div class="small-size">
                                        <h3 class="size-descriptor">Small</h3>
                                        <h3 class="item-price">$@drink.Price</h3>
                                        <h3 class="item-calories">@drink.Calories cal.</h3>
                                    </div>
                                    @{
                                        drink.Size = Size.Medium;
                                        if ((drink.Price <= Model.PriceMax || Model.PriceMax == null) && (drink.Price >= Model.PriceMin || Model.PriceMin == null)
                                                   && (drink.Calories >= Model.CaloriesMin || Model.CaloriesMin == null) && (drink.Calories <= Model.CaloriesMax || Model.CaloriesMax == null))
                                        {
                                            <div class="medium-size">
                                                <h3 class="size-descriptor">Medium</h3>
                                                <h3 class="item-price">$@drink.Price</h3>
                                                <h3 class="item-calories">@drink.Calories cal.</h3>
                                            </div>
                                        }
                                    }
                                    @{
                                        drink.Size = Size.Large;
                                        if ((drink.Price <= Model.PriceMax || Model.PriceMax == null) && (drink.Price >= Model.PriceMin || Model.PriceMin == null)
                                                   && (drink.Calories >= Model.CaloriesMin || Model.CaloriesMin == null) && (drink.Calories <= Model.CaloriesMax || Model.CaloriesMax == null))
                                        {

                                            <div class="large-size">
                                                <h3 class="size-descriptor">Large</h3>
                                                <h3 class="item-price">$@drink.Price</h3>
                                                <h3 class="item-calories">@drink.Calories cal.</h3>
                                            </div>
                                        }
                                    }
                                </div>
                            }
                        }

                    </div>
                </section>

            </div>
        </form>
    </main>
    
